# Целочисленный тип данных (int)

x, y = 6, 78
z = 16

print("Переменные:")
print(f"{x = }")
print(f"{y = }")
print(f"{z = }")
print()

print("Унарные операции:")
print(f"{+x = }")
print(f"{-x = }")
print()

print("Бинарные операции:")
print(f"сложение: {x + y = }")
print(f"вычитание: {x - y = }")
print(f"умножение: {x * y = }")
print(f"квадрат: {x ** 2 = }")
print(f"куб: {x ** 3 = }")
print(f"возведение в степень: {z ** x = }")
print(f"квадратный корень: {z ** 0.5 = }")
print(f"квадратный корень: {z ** .5 = }")
print()

print("Скобки:")
print(f"{(z + y) * x = }")
print(f"{z + y * x = }")
print()

# Когда мы пишем какое-то значение прямо в коде,
# такое значение называется литерал:
# 6, 78 — целочисленные литералы
# "привет" — строковый литерал
# 3.5, -7.2 — вещественный литерал/действительный литерал
# [1, 2, 3] — списочный литерал/литерал списка
# . — десятичный разделитель, запятая — нет

print("Литералы:")
print(f"{0.024 = }")
print(f"{000.024000 = }")
print(f"{.024 = }")
print(f"{4. = }")
print(f"{1_000_000_000 = }")
print()

print("Деление:")
# / — это всегда float
# //, % — это int
# Результат обычного деления — частное
# Результат целочисленного деления — неполное частное
# Результат взятия остатка от деления — остаток

print(f"обычное деление: {y / x = }, {x / y = }")
print(f"целочисленное деление (!): {y // x = }, {x // y = }, {25 // 7 = }")
print(f"взятие остатка от деления: {y % x = }, {x % y = }, {25 % 7 = }")
print()

# a = 3287 = 328 * 10 + 7
# Найти единицы: a % 10

a = 3287

print("Получение цифр:")
print(f"{a = }")
print(f"единицы: {a % 10 = }")
print(f"все десятки: {a // 10 = }")
print(f"десятки: {a // 10 % 10 = }")
print(f"сотни: {a // 100 % 10 = }")
print(f"две младших цифры: {a % 100 = }")
print(f"три младших цифры: {a % 1000 = }")

# x // 10 — удаление младшей цифры
# x // 100 = x // 10 // 10 — удаление двух младших цифр
# x // 1000 — удаление трёх младших цифр
# x // 10_000 — удаление четырёх младших цифр

# x % 10 — получение младшей цифры
# x % 100 — получение двух младших цифр
# x % 1000 — получение трёх младших цифр

# x // 10 % 10 — вторая цифра справа (десятки)
# x = 3287
# x // 10 = 328
# x // 10 % 10 = 328 % 10 = 8

# 3287 → 2 (сотни): x // 10 // 10 % 10 = x // 100 % 10
# 3287 → 3 (тысячи): x // 10 // 10 // 10 % 10 = x // 1000 % 10
# 3287 → 87: x % 100
# 3287 → 28: x // 10 % 100 = x % 1000 // 10

# x - x // 7 * 7 = x % 7

# Функции

# 5.0 — это float
# int(5.0)
